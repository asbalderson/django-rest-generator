openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v2/users/:
    get:
      operationId: listUsers
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v2/users/me/:
    get:
      operationId: meUser
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v2/users/{id}/:
    get:
      operationId: retrieveUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/groups/:
    get:
      operationId: listGroups
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
    post:
      operationId: createGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
  /api/v2/groups/{id}/:
    get:
      operationId: retrieveGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
    put:
      operationId: updateGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/sites/:
    get:
      operationId: listSites
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Site'
          description: ''
      tags:
      - api
    post:
      operationId: createSite
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
      tags:
      - api
  /api/v2/sites/{id}/:
    get:
      operationId: retrieveSite
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this site.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
      tags:
      - api
    put:
      operationId: updateSite
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this site.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSite
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this site.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySite
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this site.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/bugs/:
    get:
      operationId: listBugs
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: bug_number
        required: false
        in: query
        description: bug_number
        schema:
          type: string
      - name: project__name
        required: false
        in: query
        description: project__name
        schema:
          type: string
      - name: bugsla__sla
        required: false
        in: query
        description: bugsla__sla
        schema:
          type: string
      - name: bugstatus__name
        required: false
        in: query
        description: bugstatus__name
        schema:
          type: string
      - name: project
        required: false
        in: query
        description: project
        schema:
          type: string
      - name: sla
        required: false
        in: query
        description: sla
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bug'
          description: ''
      tags:
      - api
    post:
      operationId: createBug
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bug'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bug'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bug'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bug'
          description: ''
      tags:
      - api
  /api/v2/bugs/hotbugs/:
    get:
      operationId: hotbugsBug
      description: "Hot bugs endpoint on a 14 day per hour rolling window (by default).\
        \ Cached by 30 mins.\nEndpoint params:\n    from: The start date from which\
        \ to generate the report. Default: 14 days in the past.\n    to: The end date\
        \ to which generate the report. Default: now()"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bug'
          description: ''
      tags:
      - api
  /api/v2/bugs/{id}/:
    get:
      operationId: retrieveBug
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug.
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: bug_number
        required: false
        in: query
        description: bug_number
        schema:
          type: string
      - name: project__name
        required: false
        in: query
        description: project__name
        schema:
          type: string
      - name: bugsla__sla
        required: false
        in: query
        description: bugsla__sla
        schema:
          type: string
      - name: bugstatus__name
        required: false
        in: query
        description: bugstatus__name
        schema:
          type: string
      - name: project
        required: false
        in: query
        description: project
        schema:
          type: string
      - name: sla
        required: false
        in: query
        description: sla
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bug'
          description: ''
      tags:
      - api
    put:
      operationId: updateBug
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug.
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: bug_number
        required: false
        in: query
        description: bug_number
        schema:
          type: string
      - name: project__name
        required: false
        in: query
        description: project__name
        schema:
          type: string
      - name: bugsla__sla
        required: false
        in: query
        description: bugsla__sla
        schema:
          type: string
      - name: bugstatus__name
        required: false
        in: query
        description: bugstatus__name
        schema:
          type: string
      - name: project
        required: false
        in: query
        description: project
        schema:
          type: string
      - name: sla
        required: false
        in: query
        description: sla
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bug'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bug'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bug'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bug'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBug
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug.
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: bug_number
        required: false
        in: query
        description: bug_number
        schema:
          type: string
      - name: project__name
        required: false
        in: query
        description: project__name
        schema:
          type: string
      - name: bugsla__sla
        required: false
        in: query
        description: bugsla__sla
        schema:
          type: string
      - name: bugstatus__name
        required: false
        in: query
        description: bugstatus__name
        schema:
          type: string
      - name: project
        required: false
        in: query
        description: project
        schema:
          type: string
      - name: sla
        required: false
        in: query
        description: sla
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bug'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bug'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bug'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bug'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBug
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug.
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: bug_number
        required: false
        in: query
        description: bug_number
        schema:
          type: string
      - name: project__name
        required: false
        in: query
        description: project__name
        schema:
          type: string
      - name: bugsla__sla
        required: false
        in: query
        description: bugsla__sla
        schema:
          type: string
      - name: bugstatus__name
        required: false
        in: query
        description: bugstatus__name
        schema:
          type: string
      - name: project
        required: false
        in: query
        description: project
        schema:
          type: string
      - name: sla
        required: false
        in: query
        description: sla
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/bugsla/:
    get:
      operationId: listBugSLAs
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BugSLA'
          description: ''
      tags:
      - api
    post:
      operationId: createBugSLA
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugSLA'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugSLA'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugSLA'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugSLA'
          description: ''
      tags:
      - api
  /api/v2/bugsla/{id}/:
    get:
      operationId: retrieveBugSLA
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug sla.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugSLA'
          description: ''
      tags:
      - api
    put:
      operationId: updateBugSLA
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug sla.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugSLA'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugSLA'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugSLA'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugSLA'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBugSLA
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug sla.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugSLA'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugSLA'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugSLA'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugSLA'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBugSLA
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug sla.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/bugstatus/:
    get:
      operationId: listBugStatus
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BugStatus'
          description: ''
      tags:
      - api
    post:
      operationId: createBugStatus
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugStatus'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugStatus'
          description: ''
      tags:
      - api
  /api/v2/bugstatus/{id}/:
    get:
      operationId: retrieveBugStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugStatus'
          description: ''
      tags:
      - api
    put:
      operationId: updateBugStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugStatus'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBugStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugStatus'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBugStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/bugoccurence/:
    get:
      operationId: listBugOccurrences
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BugOccurrence'
          description: ''
      tags:
      - api
    post:
      operationId: createBugOccurrence
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugOccurrence'
          description: ''
      tags:
      - api
  /api/v2/bugoccurence/{id}/:
    get:
      operationId: retrieveBugOccurrence
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug occurrence.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugOccurrence'
          description: ''
      tags:
      - api
    put:
      operationId: updateBugOccurrence
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug occurrence.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugOccurrence'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBugOccurrence
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug occurrence.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BugOccurrence'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugOccurrence'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBugOccurrence
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this bug occurrence.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/projects/:
    get:
      operationId: listProjects
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    post:
      operationId: createProject
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
  /api/v2/projects/{id}/:
    get:
      operationId: retrieveProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    put:
      operationId: updateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/environments/:
    get:
      operationId: listEnvironments
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - api
    post:
      operationId: createEnvironment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Environment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Environment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - api
  /api/v2/environments/{id}/:
    get:
      operationId: retrieveEnvironment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this environment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - api
    put:
      operationId: updateEnvironment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this environment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Environment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Environment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEnvironment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this environment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Environment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Environment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEnvironment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this environment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/weeblsettings/:
    get:
      operationId: listWeeblSettings
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/WeeblSetting'
          description: ''
      tags:
      - api
    post:
      operationId: createWeeblSetting
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeblSetting'
          description: ''
      tags:
      - api
  /api/v2/weeblsettings/{id}/:
    get:
      operationId: retrieveWeeblSetting
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this weebl setting.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeblSetting'
          description: ''
      tags:
      - api
    put:
      operationId: updateWeeblSetting
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this weebl setting.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeblSetting'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWeeblSetting
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this weebl setting.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WeeblSetting'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeeblSetting'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWeeblSetting
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this weebl setting.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/ubuntuversions/:
    get:
      operationId: listUbuntuVersions
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/UbuntuVersion'
          description: ''
      tags:
      - api
    post:
      operationId: createUbuntuVersion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UbuntuVersion'
          description: ''
      tags:
      - api
  /api/v2/ubuntuversions/{id}/:
    get:
      operationId: retrieveUbuntuVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ubuntu version.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UbuntuVersion'
          description: ''
      tags:
      - api
    put:
      operationId: updateUbuntuVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ubuntu version.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UbuntuVersion'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUbuntuVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ubuntu version.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UbuntuVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UbuntuVersion'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUbuntuVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ubuntu version.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/vendors/:
    get:
      operationId: listVendors
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vendor'
          description: ''
      tags:
      - api
    post:
      operationId: createVendor
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vendor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vendor'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
      tags:
      - api
  /api/v2/vendors/{id}/:
    get:
      operationId: retrieveVendor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vendor.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
      tags:
      - api
    put:
      operationId: updateVendor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vendor.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vendor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vendor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateVendor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vendor.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vendor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vendor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVendor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vendor.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/internalcontacts/:
    get:
      operationId: listInternalContacts
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalContact'
          description: ''
      tags:
      - api
    post:
      operationId: createInternalContact
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalContact'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalContact'
          description: ''
      tags:
      - api
  /api/v2/internalcontacts/{id}/:
    get:
      operationId: retrieveInternalContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this internal contact.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalContact'
          description: ''
      tags:
      - api
    put:
      operationId: updateInternalContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this internal contact.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalContact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalContact'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateInternalContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this internal contact.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalContact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalContact'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyInternalContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this internal contact.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/machines/:
    get:
      operationId: listMachines
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Machine'
          description: ''
      tags:
      - api
    post:
      operationId: createMachine
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Machine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Machine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Machine'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
          description: ''
      tags:
      - api
  /api/v2/machines/{id}/:
    get:
      operationId: retrieveMachine
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this machine.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
          description: ''
      tags:
      - api
    put:
      operationId: updateMachine
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this machine.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Machine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Machine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Machine'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMachine
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this machine.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Machine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Machine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Machine'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMachine
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this machine.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/producttypes/:
    get:
      operationId: listProductTypes
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductType'
          description: ''
      tags:
      - api
    post:
      operationId: createProductType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
      tags:
      - api
  /api/v2/producttypes/{id}/:
    get:
      operationId: retrieveProductType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product type.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
      tags:
      - api
    put:
      operationId: updateProductType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product type.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProductType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product type.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProductType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product type.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/productsundertest/:
    get:
      operationId: listProductUnderTests
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductUnderTest'
          description: ''
      tags:
      - api
    post:
      operationId: createProductUnderTest
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUnderTest'
          description: ''
      tags:
      - api
  /api/v2/productsundertest/{id}/:
    get:
      operationId: retrieveProductUnderTest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product under test.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUnderTest'
          description: ''
      tags:
      - api
    put:
      operationId: updateProductUnderTest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product under test.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUnderTest'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProductUnderTest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product under test.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductUnderTest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUnderTest'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProductUnderTest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this product under test.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/openstackversions/:
    get:
      operationId: listOpenstackVersions
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/OpenstackVersion'
          description: ''
      tags:
      - api
    post:
      operationId: createOpenstackVersion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackVersion'
          description: ''
      tags:
      - api
  /api/v2/openstackversions/{id}/:
    get:
      operationId: retrieveOpenstackVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this openstack version.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackVersion'
          description: ''
      tags:
      - api
    put:
      operationId: updateOpenstackVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this openstack version.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackVersion'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOpenstackVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this openstack version.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpenstackVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackVersion'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOpenstackVersion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this openstack version.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/versionconfigurations/:
    get:
      operationId: listVersionConfigurations
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VersionConfiguration'
          description: ''
      tags:
      - api
    post:
      operationId: createVersionConfiguration
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConfiguration'
          description: ''
      tags:
      - api
  /api/v2/versionconfigurations/{id}/:
    get:
      operationId: retrieveVersionConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this version configuration.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConfiguration'
          description: ''
      tags:
      - api
    put:
      operationId: updateVersionConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this version configuration.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConfiguration'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateVersionConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this version configuration.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VersionConfiguration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConfiguration'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVersionConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this version configuration.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/skustatus/:
    get:
      operationId: listSkuStatus
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SkuStatus'
          description: ''
      tags:
      - api
    post:
      operationId: createSkuStatus
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SkuStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SkuStatus'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuStatus'
          description: ''
      tags:
      - api
  /api/v2/skustatus/{id}/:
    get:
      operationId: retrieveSkuStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuStatus'
          description: ''
      tags:
      - api
    put:
      operationId: updateSkuStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SkuStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SkuStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuStatus'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSkuStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SkuStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SkuStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuStatus'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySkuStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/skus/:
    get:
      operationId: listSkus
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sku'
          description: ''
      tags:
      - api
    post:
      operationId: createSku
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sku'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sku'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sku'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
          description: ''
      tags:
      - api
  /api/v2/skus/{id}/:
    get:
      operationId: retrieveSku
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku.
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
          description: ''
      tags:
      - api
    put:
      operationId: updateSku
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku.
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sku'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sku'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sku'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSku
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku.
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sku'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sku'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sku'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySku
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku.
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/skucomments/:
    get:
      operationId: listSkuComments
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SkuComment'
          description: ''
      tags:
      - api
    post:
      operationId: createSkuComment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SkuComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SkuComment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuComment'
          description: ''
      tags:
      - api
  /api/v2/skucomments/{id}/:
    get:
      operationId: retrieveSkuComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku comment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuComment'
          description: ''
      tags:
      - api
    put:
      operationId: updateSkuComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku comment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SkuComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SkuComment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuComment'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSkuComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku comment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkuComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SkuComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SkuComment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuComment'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySkuComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this sku comment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/machineconfigurations/:
    get:
      operationId: listMachineConfigurations
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/MachineConfiguration'
          description: ''
      tags:
      - api
    post:
      operationId: createMachineConfiguration
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineConfiguration'
          description: ''
      tags:
      - api
  /api/v2/machineconfigurations/{id}/:
    get:
      operationId: retrieveMachineConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this machine configuration.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineConfiguration'
          description: ''
      tags:
      - api
    put:
      operationId: updateMachineConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this machine configuration.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineConfiguration'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMachineConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this machine configuration.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MachineConfiguration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineConfiguration'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMachineConfiguration
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this machine configuration.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/pipelines/:
    get:
      operationId: listPipelines
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: triaged
        required: false
        in: query
        description: triaged
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: completed_at
        required: false
        in: query
        description: completed_at
        schema:
          type: string
      - name: failed
        required: false
        in: query
        description: failed
        schema:
          type: string
      - name: completed
        required: false
        in: query
        description: completed
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pipeline'
          description: ''
      tags:
      - api
    post:
      operationId: createPipeline
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pipeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: ''
      tags:
      - api
  /api/v2/pipelines/{id}/:
    get:
      operationId: retrievePipeline
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pipeline.
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: triaged
        required: false
        in: query
        description: triaged
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: completed_at
        required: false
        in: query
        description: completed_at
        schema:
          type: string
      - name: failed
        required: false
        in: query
        description: failed
        schema:
          type: string
      - name: completed
        required: false
        in: query
        description: completed
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: ''
      tags:
      - api
    put:
      operationId: updatePipeline
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pipeline.
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: triaged
        required: false
        in: query
        description: triaged
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: completed_at
        required: false
        in: query
        description: completed_at
        schema:
          type: string
      - name: failed
        required: false
        in: query
        description: failed
        schema:
          type: string
      - name: completed
        required: false
        in: query
        description: completed
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pipeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePipeline
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pipeline.
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: triaged
        required: false
        in: query
        description: triaged
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: completed_at
        required: false
        in: query
        description: completed_at
        schema:
          type: string
      - name: failed
        required: false
        in: query
        description: failed
        schema:
          type: string
      - name: completed
        required: false
        in: query
        description: completed
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pipeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPipeline
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pipeline.
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: triaged
        required: false
        in: query
        description: triaged
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: completed_at
        required: false
        in: query
        description: completed_at
        schema:
          type: string
      - name: failed
        required: false
        in: query
        description: failed
        schema:
          type: string
      - name: completed
        required: false
        in: query
        description: completed
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/pipelinecomments/:
    get:
      operationId: listPipelineComments
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PipelineComment'
          description: ''
      tags:
      - api
    post:
      operationId: createPipelineComment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PipelineComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PipelineComment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineComment'
          description: ''
      tags:
      - api
  /api/v2/pipelinecomments/{id}/:
    get:
      operationId: retrievePipelineComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pipeline comment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineComment'
          description: ''
      tags:
      - api
    put:
      operationId: updatePipelineComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pipeline comment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PipelineComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PipelineComment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineComment'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePipelineComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pipeline comment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PipelineComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PipelineComment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineComment'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPipelineComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pipeline comment.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/jobtypes/:
    get:
      operationId: listJobTypes
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobType'
          description: ''
      tags:
      - api
    post:
      operationId: createJobType
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobType'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobType'
          description: ''
      tags:
      - api
  /api/v2/jobtypes/{id}/:
    get:
      operationId: retrieveJobType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job type.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobType'
          description: ''
      tags:
      - api
    put:
      operationId: updateJobType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job type.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobType'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateJobType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job type.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobType'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyJobType
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job type.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/builds/:
    get:
      operationId: listBuilds
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Build'
          description: ''
      tags:
      - api
    post:
      operationId: createBuild
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Build'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Build'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: ''
      tags:
      - api
  /api/v2/builds/{id}/:
    get:
      operationId: retrieveBuild
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this build.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: ''
      tags:
      - api
    put:
      operationId: updateBuild
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this build.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Build'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Build'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBuild
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this build.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Build'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Build'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBuild
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this build.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testframeworks/:
    get:
      operationId: listTestFrameworks
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestFramework'
          description: ''
      tags:
      - api
    post:
      operationId: createTestFramework
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestFramework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestFramework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestFramework'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestFramework'
          description: ''
      tags:
      - api
  /api/v2/testframeworks/{id}/:
    get:
      operationId: retrieveTestFramework
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test framework.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestFramework'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestFramework
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test framework.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestFramework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestFramework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestFramework'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestFramework'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestFramework
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test framework.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestFramework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestFramework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestFramework'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestFramework'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestFramework
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test framework.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testcaseclasses/:
    get:
      operationId: listTestCaseClass
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestCaseClass'
          description: ''
      tags:
      - api
    post:
      operationId: createTestCaseClass
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseClass'
          description: ''
      tags:
      - api
  /api/v2/testcaseclasses/{id}/:
    get:
      operationId: retrieveTestCaseClass
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case class.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseClass'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestCaseClass
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case class.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseClass'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestCaseClass
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case class.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseClass'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseClass'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestCaseClass
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case class.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testcaseinstancestatus/:
    get:
      operationId: listTestCaseInstanceStatus
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestCaseInstanceStatus'
          description: ''
      tags:
      - api
    post:
      operationId: createTestCaseInstanceStatus
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseInstanceStatus'
          description: ''
      tags:
      - api
  /api/v2/testcaseinstancestatus/{id}/:
    get:
      operationId: retrieveTestCaseInstanceStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case instance status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseInstanceStatus'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestCaseInstanceStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case instance status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseInstanceStatus'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestCaseInstanceStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case instance status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseInstanceStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseInstanceStatus'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestCaseInstanceStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case instance status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testcases/:
    get:
      operationId: listTestCases
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestCase'
          description: ''
      tags:
      - api
    post:
      operationId: createTestCase
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCase'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
          description: ''
      tags:
      - api
  /api/v2/testcases/{id}/:
    get:
      operationId: retrieveTestCase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestCase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCase'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestCase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCase'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestCase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testcaseinstances/:
    get:
      operationId: listTestCaseInstances
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestCaseInstance'
          description: ''
      tags:
      - api
    post:
      operationId: createTestCaseInstance
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseInstance'
          description: ''
      tags:
      - api
  /api/v2/testcaseinstances/{id}/:
    get:
      operationId: retrieveTestCaseInstance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case instance.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseInstance'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestCaseInstance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case instance.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseInstance'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestCaseInstance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case instance.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCaseInstance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseInstance'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestCaseInstance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test case instance.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/features/:
    get:
      operationId: listFeatures
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Feature'
          description: ''
      tags:
      - api
    post:
      operationId: createFeature
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
      tags:
      - api
  /api/v2/features/{id}/:
    get:
      operationId: retrieveFeature
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
      tags:
      - api
    put:
      operationId: updateFeature
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFeature
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFeature
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/featurestatuses/:
    get:
      operationId: listFeatureStatus
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeatureStatus'
          description: ''
      tags:
      - api
    post:
      operationId: createFeatureStatus
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureStatus'
          description: ''
      tags:
      - api
  /api/v2/featurestatuses/{id}/:
    get:
      operationId: retrieveFeatureStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureStatus'
          description: ''
      tags:
      - api
    put:
      operationId: updateFeatureStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureStatus'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFeatureStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureStatus'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFeatureStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/layeredfeatures/:
    get:
      operationId: listLayeredFeatures
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LayeredFeature'
          description: ''
      tags:
      - api
    post:
      operationId: createLayeredFeature
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayeredFeature'
          description: ''
      tags:
      - api
  /api/v2/layeredfeatures/{id}/:
    get:
      operationId: retrieveLayeredFeature
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this layered feature.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayeredFeature'
          description: ''
      tags:
      - api
    put:
      operationId: updateLayeredFeature
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this layered feature.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayeredFeature'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateLayeredFeature
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this layered feature.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LayeredFeature'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayeredFeature'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyLayeredFeature
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this layered feature.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testplans/:
    get:
      operationId: listTestPlans
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestPlan'
          description: ''
      tags:
      - api
    post:
      operationId: createTestPlan
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlan'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
          description: ''
      tags:
      - api
  /api/v2/testplans/{id}/:
    get:
      operationId: retrieveTestPlan
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestPlan
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlan'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestPlan
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlan'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestPlan
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testcriterions/:
    get:
      operationId: listTestCriterions
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestCriterion'
          description: ''
      tags:
      - api
    post:
      operationId: createTestCriterion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCriterion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCriterion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCriterion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCriterion'
          description: ''
      tags:
      - api
  /api/v2/testcriterions/{id}/:
    get:
      operationId: retrieveTestCriterion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test criterion.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCriterion'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestCriterion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test criterion.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCriterion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCriterion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCriterion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCriterion'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestCriterion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test criterion.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCriterion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestCriterion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestCriterion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCriterion'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestCriterion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test criterion.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testplaninstancestatus/:
    get:
      operationId: listTestPlanInstanceStatus
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestPlanInstanceStatus'
          description: ''
      tags:
      - api
    post:
      operationId: createTestPlanInstanceStatus
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanInstanceStatus'
          description: ''
      tags:
      - api
  /api/v2/testplaninstancestatus/{id}/:
    get:
      operationId: retrieveTestPlanInstanceStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan instance status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanInstanceStatus'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestPlanInstanceStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan instance status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanInstanceStatus'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestPlanInstanceStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan instance status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlanInstanceStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanInstanceStatus'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestPlanInstanceStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan instance status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/testplaninstances/:
    get:
      operationId: listTestPlanInstances
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestPlanInstance'
          description: ''
      tags:
      - api
    post:
      operationId: createTestPlanInstance
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanInstance'
          description: ''
      tags:
      - api
  /api/v2/testplaninstances/{id}/:
    get:
      operationId: retrieveTestPlanInstance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan instance.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanInstance'
          description: ''
      tags:
      - api
    put:
      operationId: updateTestPlanInstance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan instance.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanInstance'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTestPlanInstance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan instance.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestPlanInstance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanInstance'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTestPlanInstance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this test plan instance.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/silos/:
    get:
      operationId: listSilos
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: enabled
        required: false
        in: query
        description: enabled
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: name__exact
        required: false
        in: query
        description: name__exact
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Silo'
          description: ''
      tags:
      - api
    post:
      operationId: createSilo
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Silo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Silo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Silo'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Silo'
          description: ''
      tags:
      - api
  /api/v2/silos/{id}/:
    get:
      operationId: retrieveSilo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: enabled
        required: false
        in: query
        description: enabled
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: name__exact
        required: false
        in: query
        description: name__exact
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Silo'
          description: ''
      tags:
      - api
    put:
      operationId: updateSilo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: enabled
        required: false
        in: query
        description: enabled
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: name__exact
        required: false
        in: query
        description: name__exact
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Silo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Silo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Silo'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Silo'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSilo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: enabled
        required: false
        in: query
        description: enabled
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: name__exact
        required: false
        in: query
        description: name__exact
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Silo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Silo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Silo'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Silo'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySilo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: enabled
        required: false
        in: query
        description: enabled
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: name__exact
        required: false
        in: query
        description: name__exact
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/silocomments/:
    get:
      operationId: listSiloComments
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SiloComment'
          description: ''
      tags:
      - api
    post:
      operationId: createSiloComment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiloComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SiloComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SiloComment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloComment'
          description: ''
      tags:
      - api
  /api/v2/silocomments/{id}/:
    get:
      operationId: retrieveSiloComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo comment.
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloComment'
          description: ''
      tags:
      - api
    put:
      operationId: updateSiloComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo comment.
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiloComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SiloComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SiloComment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloComment'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSiloComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo comment.
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiloComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SiloComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SiloComment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloComment'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySiloComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo comment.
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/jobstatus/:
    get:
      operationId: listJobStatus
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobStatus'
          description: ''
      tags:
      - api
    post:
      operationId: createJobStatus
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobStatus'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
          description: ''
      tags:
      - api
  /api/v2/jobstatus/{id}/:
    get:
      operationId: retrieveJobStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
          description: ''
      tags:
      - api
    put:
      operationId: updateJobStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateJobStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyJobStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job status.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/jobresult/:
    get:
      operationId: listJobResults
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobResult'
          description: ''
      tags:
      - api
    post:
      operationId: createJobResult
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobResult'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResult'
          description: ''
      tags:
      - api
  /api/v2/jobresult/{id}/:
    get:
      operationId: retrieveJobResult
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job result.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResult'
          description: ''
      tags:
      - api
    put:
      operationId: updateJobResult
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job result.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobResult'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResult'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateJobResult
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job result.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobResult'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResult'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyJobResult
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this job result.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/jobs/:
    get:
      operationId: listJobs
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: result__name
        required: false
        in: query
        description: result__name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
          description: ''
      tags:
      - api
    post:
      operationId: createJob
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
      tags:
      - api
  /api/v2/jobs/{uuid}/:
    get:
      operationId: retrieveJob
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: UUID of this silo.
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: result__name
        required: false
        in: query
        description: result__name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
      tags:
      - api
    put:
      operationId: updateJob
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: UUID of this silo.
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: result__name
        required: false
        in: query
        description: result__name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateJob
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: UUID of this silo.
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: result__name
        required: false
        in: query
        description: result__name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyJob
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: UUID of this silo.
        schema:
          type: string
      - name: silo
        required: false
        in: query
        description: silo
        schema:
          type: string
      - name: uuid
        required: false
        in: query
        description: uuid
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      - name: status__name
        required: false
        in: query
        description: status__name
        schema:
          type: string
      - name: result__name
        required: false
        in: query
        description: result__name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v2/sessions/:
    get:
      operationId: listAuthTokens
      description: 'Durin''s TokenSessionsViewSet.


        - Returns list of active sessions of authed user.

        - Only ``list()`` and ``delete()`` operations.


        .. versionadded:: 1.0.0'
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenSessions'
          description: ''
      tags:
      - api
  /api/v2/silos/{id}/addcomment/:
    post:
      operationId: addcommentSilo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Silo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Silo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Silo'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Silo'
          description: ''
      tags:
      - api
  /api/v2/silos/{id}/disable/:
    post:
      operationId: disableSilo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Silo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Silo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Silo'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Silo'
          description: ''
      tags:
      - api
  /api/v2/silos/{id}/enable/:
    post:
      operationId: enableSilo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this silo.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Silo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Silo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Silo'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Silo'
          description: ''
      tags:
      - api
  /api/v2/jobs/{uuid}/abort/:
    post:
      operationId: abortJob
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: UUID of this silo.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
      tags:
      - api
  /api/v2/jobs/{uuid}/cancel/:
    post:
      operationId: cancelJob
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: UUID of this silo.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
      tags:
      - api
  /api/v2/sessions/{id}/:
    delete:
      operationId: destroyAuthToken
      description: 'Durin''s TokenSessionsViewSet.


        - Returns list of active sessions of authed user.

        - Only ``list()`` and ``delete()`` operations.


        .. versionadded:: 1.0.0'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this auth token.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - username
    Group:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
      - name
    Site:
      type: object
      properties:
        domain:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 50
      required:
      - domain
      - name
    Bug:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this bug.
          maxLength: 36
        summary:
          type: string
          description: Brief overview of bug.
        bug_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Designation of this bug (e.g. Launchpad bug number).
        project:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            created_at:
              type: string
              format: date-time
              nullable: true
              description: DateTime this model instance was created.
            updated_at:
              type: string
              format: date-time
              description: DateTime this model instance was last updated.
            name:
              type: string
              description: Name of project.
              maxLength: 255
            uuid:
              type: string
              description: UUID of this project.
              maxLength: 36
          required:
          - name
          readOnly: true
        bugsla:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            created_at:
              type: string
              format: date-time
              nullable: true
              description: DateTime this model instance was created.
            updated_at:
              type: string
              format: date-time
              description: DateTime this model instance was last updated.
            sla:
              type: string
              description: Bug sla text.
              maxLength: 255
          required:
          - sla
          readOnly: true
        bugstatus:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            created_at:
              type: string
              format: date-time
              nullable: true
              description: DateTime this model instance was created.
            updated_at:
              type: string
              format: date-time
              description: DateTime this model instance was last updated.
            name:
              type: string
              description: Bug status.
              maxLength: 255
          required:
          - name
          readOnly: true
        description:
          type: string
          nullable: true
          description: Full description of bug.
        created_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime this model instance was created.
        occurrence_count:
          type: string
          readOnly: true
        first_seen:
          type: string
          readOnly: true
        last_seen:
          type: string
          readOnly: true
    BugSLA:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sla:
          type: string
          description: Bug sla text.
          maxLength: 255
      required:
      - sla
    BugStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Bug status.
          maxLength: 255
      required:
      - name
    BugOccurrence:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this bug occurrence.
          maxLength: 36
        bug:
          type: integer
        testcaseinstance:
          type: integer
          nullable: true
      required:
      - bug
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of project.
          maxLength: 255
        uuid:
          type: string
          description: UUID of this project.
          maxLength: 36
        bugs:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              uuid:
                type: string
                description: UUID of this bug.
                maxLength: 36
              summary:
                type: string
                description: Brief overview of bug.
              bug_number:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
                description: Designation of this bug (e.g. Launchpad bug number).
              project:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  created_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: DateTime this model instance was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: DateTime this model instance was last updated.
                  name:
                    type: string
                    description: Name of project.
                    maxLength: 255
                  uuid:
                    type: string
                    description: UUID of this project.
                    maxLength: 36
                required:
                - name
                readOnly: true
              bugsla:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  created_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: DateTime this model instance was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: DateTime this model instance was last updated.
                  sla:
                    type: string
                    description: Bug sla text.
                    maxLength: 255
                required:
                - sla
                readOnly: true
              bugstatus:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  created_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: DateTime this model instance was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: DateTime this model instance was last updated.
                  name:
                    type: string
                    description: Bug status.
                    maxLength: 255
                required:
                - name
                readOnly: true
              description:
                type: string
                nullable: true
                description: Full description of bug.
              created_at:
                type: string
                format: date-time
                nullable: true
                description: DateTime this model instance was created.
              occurrence_count:
                type: string
                readOnly: true
              first_seen:
                type: string
                readOnly: true
              last_seen:
                type: string
                readOnly: true
          readOnly: true
        associated_products:
          type: string
          readOnly: true
      required:
      - name
    Environment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of environment.
          maxLength: 36
        name:
          type: string
          nullable: true
          description: Name of environment.
          maxLength: 255
        data_archive_url:
          type: string
          format: uri
          description: A base URL to the data archive used.
          maxLength: 200
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:\\\
            .]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
            0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
        created_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime this model instance was created.
        updated_at:
          type: string
          format: date-time
          description: DateTime this model instance was last updated.
    WeeblSetting:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        site:
          type: integer
          description: To make sure there is only ever one instance per website.
        default_environment:
          type: integer
          nullable: true
          description: The default environment to display. If none, displays all.
      required:
      - site
    UbuntuVersion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          default: ''
          description: The name of the version of the Ubuntu system.
          maxLength: 255
        number:
          type: string
          default: ''
          description: The numerical version of the Ubuntu system
          maxLength: 10
    Vendor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The name and/or number of the product type.
          maxLength: 255
        uuid:
          type: string
          description: UUID of this vendor.
          maxLength: 36
      required:
      - name
    InternalContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The name and/or number of the product type.
          maxLength: 255
        staffdirectoryurl:
          type: string
          format: uri
          nullable: true
          description: URL linking to Canonical staff directory.
          maxLength: 200
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:\\\
            .]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
            0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
        uuid:
          type: string
          description: UUID of this contact.
          maxLength: 36
      required:
      - name
    Machine:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this machine.
          maxLength: 36
        hostname:
          type: string
          nullable: true
          description: Host name or IP address of this machine.
          maxLength: 255
    ProductType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The type of product.
          maxLength: 255
        uuid:
          type: string
          description: UUID of this type of product.
          maxLength: 36
        regex:
          type: string
          nullable: true
          description: The regex for parsing ProductUnderTest versions.
          maxLength: 255
        link:
          type: string
          nullable: true
          description: PUT link with replacement groups from the regex.
          maxLength: 255
        toplevel:
          type: boolean
          description: If this is a top-level config option to a pipeline.
      required:
      - name
    ProductUnderTest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The name of the product.
          maxLength: 255
        uuid:
          type: string
          description: UUID of this product.
          maxLength: 36
        version:
          type: string
          nullable: true
          description: The version of the product.
          maxLength: 255
        project:
          type: integer
          nullable: true
        vendor:
          type: integer
          nullable: true
        internalcontact:
          type: integer
          nullable: true
        producttype:
          type: integer
          nullable: true
      required:
      - name
    OpenstackVersion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The name of the version of the OpenStack system.
          maxLength: 255
    VersionConfiguration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this VersionConfiguration.
          maxLength: 36
        ubuntuversion:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              default: ''
              description: The name of the version of the Ubuntu system.
              maxLength: 255
            number:
              type: string
              default: ''
              description: The numerical version of the Ubuntu system
              maxLength: 10
        openstackversion:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              description: The name of the version of the OpenStack system.
              maxLength: 255
      required:
      - ubuntuversion
      - openstackversion
    SkuStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Status name
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description of status.
    Sku:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The current name of the sku.
          maxLength: 255
        colour:
          type: string
          description: HTML colour code (excluding the '#' prefix).
          maxLength: 6
        show:
          type: boolean
          description: Show on front page.
        layeredfeatures:
          type: array
          items:
            type: integer
        features:
          type: array
          items:
            type: integer
        silos:
          type: array
          items:
            type: integer
        layers:
          type: array
          items:
            type: integer
        productundertests:
          type: array
          items:
            type: integer
        status:
          type: integer
          nullable: true
        enabled_at:
          type: string
          format: date-time
          description: DateTime this Sku was enabled at.
        disabled_at:
          type: string
          format: date-time
          description: DateTime this Sku was disabled at.
        hov_base:
          type: boolean
          description: This is the base SKU for an HOV sku.
        created_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime this model instance was created.
        updated_at:
          type: string
          format: date-time
          description: DateTime this model instance was last updated.
        branch:
          type: string
          description: The branch in sqa deployments for the sku
          maxLength: 255
      required:
      - name
    SkuComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sku:
          type: integer
        uuid:
          type: string
          description: The comment UUID.
          maxLength: 36
        text:
          type: string
          description: The text of the comment.
        author:
          type: integer
      required:
      - sku
      - text
      - author
    MachineConfiguration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this machine.
          maxLength: 36
        machine:
          type: integer
          nullable: true
        productundertests:
          type: array
          items:
            type: integer
    Pipeline:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: The pipeline ID (a UUID).
          maxLength: 36
        triaged:
          type: boolean
        triaged_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime the pipeline was last marked triage.
        triaged_by:
          type: integer
          nullable: true
          description: Who triaged the run.
        failed:
          type: boolean
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime the pipeline was completed.
        sku:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              description: The current name of the sku.
              maxLength: 255
            colour:
              type: string
              description: HTML colour code (excluding the '#' prefix).
              maxLength: 6
            show:
              type: boolean
              description: Show on front page.
            layeredfeatures:
              type: array
              items:
                type: integer
            features:
              type: array
              items:
                type: integer
            silos:
              type: array
              items:
                type: integer
            layers:
              type: array
              items:
                type: integer
            productundertests:
              type: array
              items:
                type: integer
            status:
              type: integer
              nullable: true
            enabled_at:
              type: string
              format: date-time
              description: DateTime this Sku was enabled at.
            disabled_at:
              type: string
              format: date-time
              description: DateTime this Sku was disabled at.
            hov_base:
              type: boolean
              description: This is the base SKU for an HOV sku.
            created_at:
              type: string
              format: date-time
              nullable: true
              description: DateTime this model instance was created.
            updated_at:
              type: string
              format: date-time
              description: DateTime this model instance was last updated.
            branch:
              type: string
              description: The branch in sqa deployments for the sku
              maxLength: 255
          required:
          - name
        versionconfiguration:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            uuid:
              type: string
              description: UUID of this VersionConfiguration.
              maxLength: 36
            ubuntuversion:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                name:
                  type: string
                  default: ''
                  description: The name of the version of the Ubuntu system.
                  maxLength: 255
                number:
                  type: string
                  default: ''
                  description: The numerical version of the Ubuntu system
                  maxLength: 10
            openstackversion:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                name:
                  type: string
                  description: The name of the version of the OpenStack system.
                  maxLength: 255
          required:
          - ubuntuversion
          - openstackversion
        machineconfiguration:
          type: integer
          nullable: true
        layeredfeatures:
          type: array
          items:
            type: integer
        silo:
          type: integer
          nullable: true
        bugs:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              uuid:
                type: string
                description: UUID of this bug.
                maxLength: 36
              summary:
                type: string
                description: Brief overview of bug.
              bug_number:
                type: integer
                maximum: 2147483647
                minimum: -2147483648
                nullable: true
                description: Designation of this bug (e.g. Launchpad bug number).
              project:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  created_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: DateTime this model instance was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: DateTime this model instance was last updated.
                  name:
                    type: string
                    description: Name of project.
                    maxLength: 255
                  uuid:
                    type: string
                    description: UUID of this project.
                    maxLength: 36
                required:
                - name
                readOnly: true
              bugsla:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  created_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: DateTime this model instance was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: DateTime this model instance was last updated.
                  sla:
                    type: string
                    description: Bug sla text.
                    maxLength: 255
                required:
                - sla
                readOnly: true
              bugstatus:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  created_at:
                    type: string
                    format: date-time
                    nullable: true
                    description: DateTime this model instance was created.
                  updated_at:
                    type: string
                    format: date-time
                    description: DateTime this model instance was last updated.
                  name:
                    type: string
                    description: Bug status.
                    maxLength: 255
                required:
                - name
                readOnly: true
              description:
                type: string
                nullable: true
                description: Full description of bug.
              created_at:
                type: string
                format: date-time
                nullable: true
                description: DateTime this model instance was created.
              occurrence_count:
                type: string
                readOnly: true
              first_seen:
                type: string
                readOnly: true
              last_seen:
                type: string
                readOnly: true
        created_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime this model instance was created.
        version_table:
          type: string
          readOnly: true
      required:
      - sku
      - versionconfiguration
      - bugs
    PipelineComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pipeline:
          type: integer
        uuid:
          type: string
          description: The comment UUID.
          maxLength: 36
        text:
          type: string
          description: The text of the comment.
        author:
          type: integer
      required:
      - pipeline
      - text
      - author
    JobType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The type of job.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description of job type.
        colour:
          type: string
          description: HTML colour code for this job (excluding the '#' prefix).
          maxLength: 6
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Order in which jobs are run/should be displayed in UI.
        plot:
          type: boolean
          description: Show on plots (e.g. success rate and trends graphs).
        voting:
          type: boolean
          description: If this job fails the whole pipeline is marked failed.
    Build:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this build.
          maxLength: 36
        build_id:
          type: string
          description: The build number or other identifier used by jenkins.
          maxLength: 255
        build_started_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime the build was started.
        build_finished_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime the build finished.
        build_analysed_at:
          type: string
          format: date-time
          nullable: true
          description: DateTime build analysed by weebl, or None if unanalysed.
        pipeline:
          type: integer
        jobtype:
          type: integer
        jenkins_build_url:
          type: string
          readOnly: true
      required:
      - build_id
      - pipeline
      - jobtype
    TestFramework:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of the testing framework.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description for this test framework.
        version:
          type: string
          nullable: true
          description: Version of this test framework.
        uuid:
          type: string
          description: UUID of this test framework and version.
          maxLength: 36
      required:
      - name
    TestCaseClass:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of this individual test case class.
          maxLength: 255
        producttypes:
          type: array
          items:
            type: integer
          description: Product types this class tests.
        testframework:
          type: integer
          nullable: true
        uuid:
          type: string
          description: UUID of this testcaseclass.
          maxLength: 36
      required:
      - name
      - testframework
    TestCaseInstanceStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The resulting outcome of the test.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description for outcome.
    TestCase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of this individual test case.
          maxLength: 255
        testcaseclass:
          type: integer
          nullable: true
        uuid:
          type: string
          description: UUID of this testcase.
          maxLength: 36
      required:
      - name
      - testcaseclass
    TestCaseInstance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        testcaseinstancestatus:
          type: integer
          nullable: true
        uuid:
          type: string
          description: UUID of this TestCase.
          maxLength: 36
        build:
          type: integer
        testcase:
          type: integer
    Feature:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this Feature.
          maxLength: 36
        name:
          type: string
          description: Name of the Feature.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description of Feature.
      required:
      - name
    FeatureStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of status
          maxLength: 36
        name:
          type: string
          default: unknown
          description: The resulting outcome of the test.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description for outcome.
        color:
          type: string
          description: HTML colour code (excluding the '#' prefix).
          maxLength: 6
    LayeredFeature:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this layeredfeature.
          maxLength: 36
        layer:
          type: integer
          nullable: true
        feature:
          type: integer
          nullable: true
        name:
          type: string
          description: Name of the LayeredFeature.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description of layeredfeature.
        featurestatus:
          type: integer
          nullable: true
      required:
      - name
    TestPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this test plan.
          maxLength: 36
        name:
          type: string
          description: Name of this test plan.
          maxLength: 255
        version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Version number of this test plan.
        description:
          type: string
          nullable: true
          description: Optional description of this test plan.
      required:
      - name
      - version
    TestCriterion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this test criterion.
          maxLength: 36
        test_plan:
          type: integer
        layeredfeatures:
          type: array
          items:
            type: integer
          description: Feature from specific Layer.
        features:
          type: array
          items:
            type: integer
          description: Feature from arbitrary Layer.
        required_count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of required passing runs with the layeredfeature.
      required:
      - test_plan
      - layeredfeatures
      - required_count
    TestPlanInstanceStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The resulting outcome of the test.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description for outcome.
    TestPlanInstance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this test plan instance.
          maxLength: 36
        test_plan:
          type: integer
        product_under_test:
          type: integer
          nullable: true
        status:
          type: integer
          nullable: true
        start_at:
          type: string
          format: date-time
          description: Start date for test plan. Only pipelines completing after this
            are considered.
        due_at:
          type: string
          format: date-time
          description: Due date for this test plan instance.
        base_priority:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Base priority for this test plan instance. Higher number is
            high priority.
        criteria_status:
          type: string
          readOnly: true
        effective_priority:
          type: string
          readOnly: true
      required:
      - test_plan
    Silo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          description: UUID of this silo.
          maxLength: 36
        name:
          type: string
          description: The name of the silo.
          maxLength: 255
        enabled:
          type: boolean
          description: Enable for scheduling
        user:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            username:
              type: string
              description: Required. 150 characters or fewer. Letters, digits and
                @/./+/-/_ only.
              pattern: ^[\w.@+-]+$
              maxLength: 150
            email:
              type: string
              format: email
              maxLength: 254
            groups:
              type: array
              items:
                type: integer
              description: The groups this user belongs to. A user will get all permissions
                granted to each of their groups.
            is_superuser:
              type: boolean
              description: Designates that this user has all permissions without explicitly
                assigning them.
          required:
          - username
          readOnly: true
      required:
      - name
    SiloComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        silo:
          type: integer
        uuid:
          type: string
          description: The comment UUID.
          maxLength: 36
        text:
          type: string
          description: The text of the comment.
        author:
          type: object
          properties:
            url:
              type: string
              readOnly: true
            username:
              type: string
              description: Required. 150 characters or fewer. Letters, digits and
                @/./+/-/_ only.
              pattern: ^[\w.@+-]+$
              maxLength: 150
            email:
              type: string
              format: email
              maxLength: 254
            groups:
              type: array
              items:
                type: integer
              description: The groups this user belongs to. A user will get all permissions
                granted to each of their groups.
            is_superuser:
              type: boolean
              description: Designates that this user has all permissions without explicitly
                assigning them.
          required:
          - username
        updated_at:
          type: string
          format: date-time
          description: DateTime this model instance was last updated.
      required:
      - silo
      - text
      - author
    JobStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Status name
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description of status.
    JobResult:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Result name
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Optional description of result.
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        deployment_branch:
          type: string
          description: The solutions-qa-deployments branch to use.
          maxLength: 255
        deployment_repo:
          type: string
          nullable: true
          description: The solutions-qa-deployments repo to use.
          maxLength: 255
        silo:
          type: integer
          description: Silo this build is running on
        extra_projects:
          type: string
          nullable: true
          description: List of extra projects to include.
        power_cycle:
          type: boolean
          description: Should the deploy run a powercycle.
        fork_project:
          type: string
          nullable: true
          description: Name of project to be ran after fce_build.
        clean_after_run:
          type: boolean
          description: Run the clean script for the silo after the run completes.
        run_fce_build:
          type: boolean
          description: Kick off fce_build job during fce_cloud job.
        uuid:
          type: string
          description: UUID of this silo.
          maxLength: 36
        fce_container_image:
          type: string
          description: UUID of this silo.
          maxLength: 255
        user:
          type: integer
          description: User who created requested the build.
        status:
          type: integer
          description: the status of the build
      required:
      - silo
      - user
      - status
    TokenSessions:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        expiry:
          type: string
          format: date-time
          readOnly: true
        has_expired:
          type: string
          readOnly: true
        is_current:
          type: string
          readOnly: true
        expires_in_str:
          type: string
      required:
      - expires_in_str
